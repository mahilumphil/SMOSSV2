@{
    ViewBag.Title = "PostList";
}

<div id="divSeparator"></div>
<div class="container">
    <div class="row">
        <div class="col-md-3"></div>
        <div class="col-md-6">
            <input type="search" name="name" value=" " placeholder="Search Items" class="form-control" />
        </div>
        <div class="col-md-3"></div>
    </div>
    <div id="divSeparator"></div>
    <div class="row">
        <div class="col-md-12">
            <div style="height:500px;  background-color:rgba(0,0,0,0.1);" id="postDetailGridList"></div>
        </div>
    </div>
</div>
<div id="divSeparator"></div>

<!--  Edit Post Modal -->
<div class="modal fade" id="itemDetailModal" role="dialog">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="panel panel-default">
                <div class="panel-heading">

                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Edit Post List<i class="fa fa-check-square-o"></i></h4>
                </div>

                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-6">
                            @*<div class="form-group">
                                <label for="itemname">Photo:</label>
                                <input type="file" name="itemname" value=" " id="itemname" class="form-control" />
                            </div>
                            <div id="divImage">
                                <img id="imageDisplay" src="#" class="img-responsive img-thumbnail" />
                            </div>*@
                            <div class="form-group">
                                <label for="itemname">Specification:</label>
                                <textarea rows="10" class="form-control" id="Specification" disabled></textarea>
                            </div>
                            <div class="form-group">
                                <label for="itemname">Price:</label>
                                <input type="number" name="itemname" value=" " id="Price" class="form-control" disabled />
                            </div>
                            <div class="form-group">
                                <label for="itemname">Item Name:</label>
                                <input type="text" name="itemname" value=" " id="postItemName" class="form-control" />
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="itemname">Remarks:</label>
                                <textarea rows="10" class="form-control" id="Remarks"></textarea>
                            </div>
                            <div class="form-group">
                                <div class="form-group">
                                    <div id="cboPayType"></div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <div class="form-group">
                                            <div id="cboStatus"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <div id="cboQuantity"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary btn-sm" id="" onclick="saveItemOnclick()"><i class="fa fa-check-square-o"></i> Save</button>
                    <button class="btn btn-danger btn-sm" id="" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Post Modal-->
<div class="modal fade" id="deleteItemModal" role="dialog">
    <div class="modal-dialog modal-sm">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="panel panel-danger">
                <div class="panel-heading">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Delete Post <i class="fa fa-trash"></i></h4>
                    </div>
                </div>
                <div class="panel-body">
                    <div class="modal-body">
                        Are you sure you want to Delete Post?
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger btn-sm" onclick="deleteItem()"><i class="fa fa-check-square-o"></i> Delete</button>
                    <button class="btn btn-warning btn-sm" id="" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var postDetailListCollection;
    var postDetailGridList;
    var itemDetailCollections;
    var currentItem;
    var postDetail;
    var itemId;
    var cboStatus;
    var cboQuantity;
    var cboPayType;
    var payTypeCategory;

    function createCBOQuantity() {
        var number = new Array('1', '2', '3', '4', '5', '6', '7', '8', '9', '10');

        cboQuantity.dispose();
        cboQuantity = new wijmo.input.ComboBox("#cboQuantity", {
            itemsSource: number
        });
    }


    function editPostModal() {
        $("#itemDetailModal").modal({
            "backDrop": "static",
            "show": true
        });



        postDetailListCollection.editItem(postDetailListCollection.currentItem);
        currentItem = postDetailListCollection.currentEditItem;
        itemId = currentItem.Id;

        console.log(currentItem.PayType);

        document.getElementById("Specification").value = currentItem.Specification;
        document.getElementById("Remarks").value = currentItem.Remarks;
        document.getElementById("Price").value = currentItem.Price;
        document.getElementById("postItemName").value = currentItem.ItemName;
        cboPayType.selectedValue = currentItem.PayType;
        //cboQuantity.selectedValue = currentItem.Quantity;
        //cboStatus.selectedValue = currentItem.Status;
        //document.getElementById("PayType").value = currentItem.PayType;
        //document.getElementById("quantity").value = currentItem.Quantity;
        //document.getElementById("imageDisplay").src = currentItem.PhotoValue;
        //$("#imageDisplay").show();
        //document.getElementById("itemName").value = currentItem.ItemName;

    }

    function saveItemOnclick()
    {
        $.ajax({
            type: "PUT",
            url: '/api/update/postitem/' + currentItem.Id,
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            data: currentItem,
            statusCode: {
                200: function () {
                    toastr.success("Successfully Update");
                    $("#itemDetailModal").modal('hide');

                    postDetailListCollection = new wijmo.collections.CollectionView(getPostDetail());
                    postDetailGridList.itemsSource = postDetailListCollection;
                    postDetailGridList.trackChanges = true;
                },
                400: function (message) {
                    toastr.error(message.responseText.replace(/"/g, ""), "Bad Request");
                }
            }
        });
    }

    //Delete Post Item

    function deleteItem() {
        postDetailListCollection.editItem(postDetailListCollection.currentItem);
        var currentItem = postDetailListCollection.currentEditItem;
        $.ajax({
            type: "DELETE",
            url: '/api/delete/postitem/' + currentItem.Id,
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            statusCode: {
                200: function () {
                    toastr.success("Successfully Deleted");

                    $("#deleteItemModal").modal('hide');
                    postDetailListCollection = new wijmo.collections.CollectionView(getPostDetail());
                    postDetailGridList.itemsSource = postDetailListCollection;
                    postDetailGridList.trackChanges = true;
                },
                400: function (message) {
                    toastr.error(message.responseText.replace(/"/g, ""), "Bad Request");
                }
            }
        });

    }

    //Delete Post Item Nodal
    function deleteItemModal() {
        $("#deleteItemModal").modal({
            "backDrop": "static",
            "show": true
        });
    }

   
    //get Post Detail List
    function getPostDetail() {
        postDetail = new wijmo.collections.ObservableArray;
        $.ajax({
            type: "GET",
            url: '/api/list/postlist',
            contentType: "application/json;charset=utf-8",
            success: function (postDetailList) {
                for (i = 0; i < postDetailList.length; i++) {
                    postDetail.push({
                        Id: postDetailList[i]["Id"],
                        userId: postDetailList["PostedByUserId"],
                        ItemName: postDetailList[i]["Item"],
                        Price: postDetailList[i]["Price"],
                        Specification: postDetailList[i]["Specification"],
                        Remarks: postDetailList[i]["Remarks"],
                        PayType: postDetailList[i]["PayType"],
                        Status: postDetailList[i]["Status"],
                        Quantity: postDetailList[i]["Quantity"],
                        btnEdit: "<button onclick='editPostModal()' class='btn btn-info btn-block btn-xs'>Edit</button>",
                        btnDelete: "<button onclick='deleteItemModal()' class='btn btn-danger btn-block btn-xs'>Delete</button>"
                    });
                }
            }
        });
        console.log(postDetail);
        return postDetail;
    }

    //get PayType ComboBox
    function getPayType() {
        payTypeCategory = new wijmo.collections.ObservableArray;
        $.ajax({
            type: "GET",
            url: '/api/list/syspaytype',
            contentType: "application/json;charset=utf-8",
            success: function (payTypeCategoryList) {
                for (i = 0; i < payTypeCategoryList.length; i++) {
                    payTypeCategory.push({
                        Id: payTypeCategoryList[i]["Id"],
                        PayType: payTypeCategoryList[i]["PayType"],
                    });
                }
                cboPayType.dispose();
                cboPayType = new wijmo.input.ComboBox("#cboPayType", {
                    itemsSource: payTypeCategory,
                    selectedValuePath: "PayType",
                    displayMemberPath: "PayType"
                });
            }
        });
    }


    function createFlexGrid() {
        postDetailListCollection = new wijmo.collections.CollectionView(getPostDetail());

        //Flex Grid
        postDetailGridList = new wijmo.grid.FlexGrid("#postDetailGridList");
        postDetailGridList.initialize({
            columns: [
                {
                    "header": "Edit",
                    "binding": "btnEdit",
                    "allowSorting": true,
                    "width": "2*",
                    "allowResizing": true,
                    "allowSorting": false,
                    "isContentHtml": true
                },
                {
                    "header": "Delete",
                    "binding": "btnDelete",
                    "allowSorting": true,
                    "width": "2*",
                    "allowResizing": true,
                    "allowSorting": false,
                    "isContentHtml": true
                },
                {
                    "header": "Item Name",
                    "binding": "ItemName",
                    "allowSorting": true,
                    "width": "2*",
                    "allowResizing": true,
                    "allowSorting": false,
                    "isContentHtml": true
                },
                {
                    "header": "Price",
                    "binding": "Price",
                    "allowSorting": true,
                    "width": "2*",
                    "allowResizing": true,
                    "allowSorting": false,
                    "isContentHtml": true
                },
                {
                    "header": "Specification",
                    "binding": "Specification",
                    "allowSorting": true,
                    "width": 200,
                    "allowResizing": true,
                    "allowSorting": false,
                    "isContentHtml": true
                },
                {
                    "header": "Remarks",
                    "binding": "Remarks",
                    "allowSorting": true,
                    "width": "2*",
                    "allowResizing": true,
                    "allowSorting": false,
                    "isContentHtml": true
                },
                {

                    "header": "Payment",
                    "binding": "PayType",
                    "allowSorting": true,
                    "width": "2*",
                    "allowResizing": true,
                    "allowSorting": false,
                    "isContentHtml": true
                },
                {

                    "header": "Status",
                    "binding": "Status",
                    "allowSorting": true,
                    "width": "2*",
                    "allowResizing": true,
                    "allowSorting": false,
                    "isContentHtml": true
                },
                {

                    "header": "Quantity",
                    "binding": "Quantity",
                    "allowSorting": true,
                    "width": "2*",
                    "allowResizing": true,
                    "allowSorting": false,
                    "isContentHtml": true
                },
            ],
            autoGenerateColumns: false,
            itemsSource: postDetailListCollection,
            isReadOnly: true,
            autoSizeMode: wijmo.grid.AutoSizeMode.Both,
            allowDragging: wijmo.grid.AllowDragging.None,
            selectionMode: wijmo.grid.SelectionMode.Row,
            headersVisibility: wijmo.grid.HeadersVisibility.Column
        });
        postDetailGridList.trackChanges = true;
        //postDetailGridList.rows.defaultSize = 150;
    }


    window.onload = function () {
        getPayType();
        createFlexGrid();
        createCBOQuantity();
        cboStatus = new wijmo.input.ComboBox("#cboStatus");
        cboPayType = new wijmo.input.ComboBox("#cboPayType");
        cboQuantity = new wijmo.input.ComboBox("#cboQuantity");
    }
</script>