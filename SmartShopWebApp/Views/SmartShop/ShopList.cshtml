@{
    ViewBag.Title = "PostList";
}

<div id="divSeparator"></div>
<div class="container">
    <div class="row">
        <div class="col-md-3"></div>
        <div class="col-md-6">
            <h2 id="itemCategoryTitle"></h2>
            <input type="search" name="name" value=" " placeholder="Search Items" class="form-control" />
        </div>
        <div class="col-md-3"></div>
    </div>
    <div id="divSeparator"></div>
    <div class="row">
        <div class="col-md-3">
            <div class="input-group">
                <span class="input-group-addon"><i class="fa fa-calendar fa-fw"></i> Start Date</span>
                <div id="cboStartDate"></div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="input-group">
                <span class="input-group-addon"><i class="fa fa-calendar fa-fw"></i> End Date</span>
                <div id="cboEndDate"></div>
            </div>
        </div>
        <div class="col-md-3"></div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12">
            <div style="height:500px;  background-color:rgba(0,0,0,0.1);" id="postDetailGridList"></div>
        </div>
    </div>
</div>
<div id="divSeparator"></div>

<!--  Edit Post Modal -->
<div class="modal fade" id="itemDetailModal" role="dialog">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="panel panel-default">
                <div class="panel-heading">

                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Edit Post List<i class="fa fa-check-square-o"></i></h4>
                </div>

                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <div id="cboItemList" style="width:100%;">

                                </div>
                                <div id="divImage">
                                    <img id="imageDisplay" src="#" class="img-responsive img-thumbnail" />
                                </div>
                            </div>


                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="itemname">Specification:</label>
                                <textarea rows="10" class="form-control" id="Specification" disabled></textarea>
                            </div>
                            <div class="form-group">
                                <label for="itemname">Price:</label>
                                <input type="number" name="itemname" value=" " id="Price" class="form-control" disabled />
                            </div>
                            <div class="form-group">
                                <label for="itemname">Remarks:</label>
                                <textarea rows="10" class="form-control" id="Remarks"></textarea>
                            </div>
                            <div class="form-group">
                                <label for="itemname">Item Name:</label>
                                <input type="text" name="itemname" value=" " id="ItemName" class="form-control" />
                            </div>
                            <div class="form-group">
                                <label for="">Pay Type:</label>
                                <div id="cboPayType" style="width:100%"></div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="">Status</label>
                                        <div id="cboStatus" style="width:100%"></div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="">Quantity:</label>
                                        <div id="cboQuantity" style="width:100%"></div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary btn-sm" id="" onclick="saveItemOnclick()"><i class="fa fa-check-square-o"></i> Save</button>
                    <button class="btn btn-danger btn-sm" id="" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Post Modal-->
<div class="modal fade" id="deleteItemModal" role="dialog">
    <div class="modal-dialog modal-sm">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="panel panel-danger">
                <div class="panel-heading">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Delete Post <i class="fa fa-trash"></i></h4>
                    </div>
                </div>
                <div class="panel-body">
                    <div class="modal-body">
                        Are you sure you want to Delete Post?
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger btn-sm" onclick="deleteItem()"><i class="fa fa-check-square-o"></i> Delete</button>
                    <button class="btn btn-warning btn-sm" id="" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var postDetailListCollection;
    var postDetailGridList;
    var itemDetailCollections;
    var currentItem;
    var postDetail;
    var itemId;
    var cboStatus;
    var cboQuantity;
    var cboPayType;
    var payTypeCategory;
    var cboStartDate;
    var cboEndDate;

    function createCBOQuantity() {
        var number = new Array('1', '2', '3', '4', '5', '6', '7', '8', '9', '10');

        cboQuantity.dispose();
        cboQuantity = new wijmo.input.ComboBox("#cboQuantity", {
            itemsSource: number
        });
    }


    function viewItemDetail() {
        window.location = "/SmartShop/PostDetail";
    }

    //Get Item
    function getItem() {
        var items = new wijmo.collections.ObservableArray;
        $.ajax({
            type: "GET",
            url: '/api/list/stpitem',
            contentType: "application/json;charset=utf-8",
            success: function (itemList) {
                for (i = 0; i < itemList.length; i++) {
                    items.push({
                        Id: itemList[i]["Id"],
                        ItemName: itemList[i]["ItemName"],
                        Price: itemList[i]["Price"],
                        Specification: itemList[i]["Specification"],
                        Photo: itemList[i]["Photo"],
                    });
                }
                cboItemList.dispose();
                cboItemList = new wijmo.input.ComboBox("#cboItemList", {
                    itemsSource: items,
                    selectedValuePath: "ItemName",
                    displayMemberPath: "ItemName",
                    onSelectedIndexChanged: function () {
                        //var imageElement = document.createElement("images");
                        //var imageData = new Image();
                        //imageData.src = "data:image/jpeg;base64," + this.selectedItem["Photo"];
                        //imageData.className = "img-responsive";
                        //imageElement.appendChild(imageData);
                        //var photoDivElement = document.createElement("DIV");
                        //var photoDiv = document.getElementById("photoDiv").appendChild(imageElement);
                        //photoDiv.appendChild(photoDivElement);

                        var imageDataValue = "data:image/jpeg;base64," + this.selectedItem["Photo"];
                        document.getElementById("imageDisplay").src = imageDataValue;
                        document.getElementById("Specification").value = this.selectedItem["Specification"];
                        document.getElementById("Price").value = this.selectedItem["Price"].toLocaleString();
                    }
                });

                var imageDataValue = "data:image/jpeg;base64," + cboItemList.selectedItem["Photo"];
                document.getElementById("imageDisplay").src = imageDataValue;

                document.getElementById("Specification").value = cboItemList.selectedItem["Specification"];
                document.getElementById("Price").value = cboItemList.selectedItem["Price"].toLocaleString();
            }
        });
    }

    function saveItemOnclick() {
        var itemObject = {
            ItemId: cboItemList.selectedItem["Id"],
            Remarks: document.getElementById("Remarks").value,
            Quantity: cboQuantity.selectedValue,
            PayTypeId: cboPayType.selectedItem["Id"],
            StatusId: cboStatus.selectedItem["Id"]
        }

        var itemData = JSON.stringify(itemObject);
        console.log(itemData);

        $.ajax({
            type: "PUT",
            url: '/api/update/postitem/' + currentItem.Id,
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            data: itemData,
            statusCode: {
                200: function () {
                    toastr.success("Successfully Update");
                    $("#itemDetailModal").modal('hide');

                    postDetailListCollection = new wijmo.collections.CollectionView(getPostDetail());
                    postDetailGridList.itemsSource = postDetailListCollection;
                    postDetailGridList.trackChanges = true;
                },
                400: function (message) {
                    toastr.error(message.responseText.replace(/"/g, ""), "Bad Request");
                }
            }
        });
    }

    //Delete Post Item

    function deleteItem() {
        postDetailListCollection.editItem(postDetailListCollection.currentItem);
        currentItem = postDetailListCollection.currentEditItem;
        $.ajax({
            type: "DELETE",
            url: '/api/delete/postitem/' + currentItem.Id,
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            statusCode: {
                200: function () {
                    toastr.success("Successfully Deleted");

                    $("#deleteItemModal").modal('hide');
                    postDetailListCollection = new wijmo.collections.CollectionView(getPostDetail());
                    postDetailGridList.itemsSource = postDetailListCollection;
                    postDetailGridList.trackChanges = true;
                },
                400: function (message) {
                    toastr.error(message.responseText.replace(/"/g, ""), "Bad Request");
                }
            }
        });

    }

    //Delete Post Item Nodal
    function deleteItemModal() {
        $("#deleteItemModal").modal({
            "backDrop": "static",
            "show": true
        });
    }


    //get Post Detail List
    function getPostDetail() {

        var startDateValue = [cboStartDate.value.getMonth() + 1, cboStartDate.value.getDate(), cboStartDate.value.getFullYear()].join('-');
        var endDateValue = [cboEndDate.value.getMonth() + 1, cboEndDate.value.getDate(), cboEndDate.value.getFullYear()].join('-');

        postDetail = new wijmo.collections.ObservableArray;
        $.ajax({
            type: "GET",
            url: '/api/list/postitem/byitemcategory/' + getUrlParameter("itemCategoryId") + "/" + startDateValue + "/" + endDateValue,
            contentType: "application/json;charset=utf-8",
            success: function (postDetailList) {
                for (i = 0; i < postDetailList.length; i++) {
                    var imageElement = document.createElement("images");
                    var imageData = new Image();
                    imageData.src = "data:image/jpeg;base64," + postDetailList[i]["PhotoValue"];
                    imageElement.appendChild(imageData);
                    var photoDivElement = document.createElement("DIV").appendChild(imageElement);
                    var imageSRCData = "data:image/jpeg;base64," + postDetailList[i]["PhotoValue"];

                    var postNewDate = new Date(postDetailList[i]["PostDate"]);
                    var postDateValue = [postNewDate.getMonth() + 1, postNewDate.getDate(), postNewDate.getFullYear()].join('-');

                    postDetail.push({
                        Id: postDetailList[i]["Id"],
                        PostedByUser: postDetailList[i]["PostedByUserId"],
                        ItemName: postDetailList[i]["ItemName"],
                        Price: postDetailList[i]["Price"],
                        Specification: postDetailList[i]["Specification"],
                        Remarks: postDetailList[i]["Remarks"],
                        PayType: postDetailList[i]["PayType"],
                        Status: postDetailList[i]["Status"],
                        IsApproved: postDetailList[i]["IsApproved"],
                        Quantity: postDetailList[i]["Quantity"],
                        btnView: "<button onclick='viewItemDetail()' class='btn btn-primary btn-block btn-xs'><i class='fa fa-eye'></i> View</button>",
                        PhotoValue: postDetailList[i]["PhotoValue"],
                        PostDate: postDateValue,
                    });
                }
            }
        });
        console.log(postDetail);
        return postDetail;
    }

    //get PayType ComboBox
    function getPayType() {
        payTypeCategory = new wijmo.collections.ObservableArray;
        $.ajax({
            type: "GET",
            url: '/api/list/syspaytype',
            contentType: "application/json;charset=utf-8",
            success: function (payTypeCategoryList) {
                for (i = 0; i < payTypeCategoryList.length; i++) {
                    payTypeCategory.push({
                        Id: payTypeCategoryList[i]["Id"],
                        PayType: payTypeCategoryList[i]["PayType"],
                    });
                }
                cboPayType.dispose();
                cboPayType = new wijmo.input.ComboBox("#cboPayType", {
                    itemsSource: payTypeCategory,
                    selectedValuePath: "PayType",
                    displayMemberPath: "PayType"
                });
            }
        });
    }

    //Get Status Category
    function getStatusCategory() {
        statusCategory = new wijmo.collections.ObservableArray;
        $.ajax({
            type: "GET",
            url: '/api/list/syspostitemstatus',
            contentType: "application/json;charset=utf-8",
            success: function (statusCategoryList) {
                for (i = 0; i < statusCategoryList.length; i++) {
                    statusCategory.push({
                        Id: statusCategoryList[i]["Id"],
                        Status: statusCategoryList[i]["Status"],
                        IsReserved: statusCategoryList[i]["IsReserved"],
                        IsBought: statusCategoryList[i]["IsBought"],
                        IsAvailable: statusCategoryList[i]["IsAvailable"],
                    });
                }
                cboStatus.dispose();
                cboStatus = new wijmo.input.ComboBox("#cboStatus", {
                    itemsSource: statusCategory,
                    selectedValuePath: "Status",
                    displayMemberPath: "Status"
                });
            }
        });
    }

    function createFlexGrid() {
        postDetailListCollection = new wijmo.collections.CollectionView(getPostDetail());

        //Flex Grid
        postDetailGridList = new wijmo.grid.FlexGrid("#postDetailGridList");
        postDetailGridList.initialize({
            columns: [
                {
                    "header": "Detail",
                    "binding": "btnView",
                    "allowSorting": true,
                    "width": "1*",
                    "allowResizing": true,
                    "allowSorting": false,
                    "isContentHtml": true
                },
                {
                    "header": "Item Name",
                    "binding": "ItemName",
                    "allowSorting": true,
                    "width": "3*",
                    "allowResizing": true,
                    "allowSorting": false,
                    "isContentHtml": true
                },
                {

                    "header": "Posted By:",
                    "binding": "PostedByUser",
                    "allowSorting": true,
                    "width": "2*",
                    "allowResizing": true,
                    "allowSorting": false,
                    "isContentHtml": true
                },
                {

                    "header": "Status",
                    "binding": "Status",
                    "allowSorting": true,
                    "width": "2*",
                    "allowResizing": true,
                    "allowSorting": false,
                    "isContentHtml": true
                },
                {

                    "header": "Price",
                    "binding": "Price",
                    "allowSorting": true,
                    "width": "1*",
                    "allowResizing": true,
                    "allowSorting": false,
                    "isContentHtml": true
                },
                {

                    "header": "Posted Date",
                    "binding": "PostDate",
                    "allowSorting": true,
                    "width": "1.5*",
                    "align": "right",
                    "allowResizing": true,
                    "allowSorting": false,
                    "isContentHtml": true
                },
            ],
            autoGenerateColumns: false,
            itemsSource: postDetailListCollection,
            isReadOnly: true,
            autoSizeMode: wijmo.grid.AutoSizeMode.Both,
            allowDragging: wijmo.grid.AllowDragging.None,
            selectionMode: wijmo.grid.SelectionMode.Row,
            headersVisibility: wijmo.grid.HeadersVisibility.Column
        });
        postDetailGridList.trackChanges = true;
        //postDetailGridList.rows.defaultSize = 150;
    }

    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $("#divImage").show();
                $('#imageDisplay').attr('src', e.target.result);
            }
            reader.readAsDataURL(input.files[0]);
        }
    }

    // get parameters in url
    function getUrlParameter(name) {
        name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
        var regexS = "[\\?&]" + name + "=([^&#]*)";
        var regex = new RegExp(regexS);
        var results = regex.exec(window.location.href);
        if (results == null) {
            return "";
        } else {
            return results[1];
        }
    }

    var isCboStartDateClicked = false;
    var isCboEndDateClicked = false;

    window.onload = function () {
        document.getElementById("itemCategoryTitle").innerHTML = decodeURIComponent(getUrlParameter("label").replace(/\+/g, '%20'));

        cboStartDate = new wijmo.input.InputDate('#cboStartDate', {
            format: 'MM-dd-yyyy',
            value: new Date(),
            mask: '99-99-9999',
            onValueChanged: function () {
                if (isCboStartDateClicked == true) {
                    postDetailListCollection = new wijmo.collections.CollectionView(getPostDetail());
                    postDetailGridList.itemsSource = postDetailListCollection;
                    postDetailGridList.trackChanges = true;
                } else {
                    isCboStartDateClicked = true;
                }
            }
        });

        cboEndDate = new wijmo.input.InputDate('#cboEndDate', {
            format: 'MM-dd-yyyy',
            value: new Date(),
            mask: '99-99-9999',
            onValueChanged: function () {
                if (isCboEndDateClicked == true) {
                    postDetailListCollection = new wijmo.collections.CollectionView(getPostDetail());
                    postDetailGridList.itemsSource = postDetailListCollection;
                    postDetailGridList.trackChanges = true;
                } else {
                    isCboEndDateClicked = true;
                }
            }
        });

        createFlexGrid();
        cboStatus = new wijmo.input.ComboBox("#cboStatus");
        cboPayType = new wijmo.input.ComboBox("#cboPayType");
        cboQuantity = new wijmo.input.ComboBox("#cboQuantity");
        cboItemList = new wijmo.input.ComboBox("#cboItemList");
        getItem();
        getPayType();
        getStatusCategory();
        createCBOQuantity();

    }
</script>