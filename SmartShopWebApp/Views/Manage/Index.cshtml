@model SmartShopWebApp.Models.IndexViewModel
@{
    ViewBag.Title = "Manage Your Account";
}

<p class="text-success">@ViewBag.StatusMessage</p>

@*<h2>@ViewBag.Title.</h2>*@
<div id="divSeparator"></div>
<div class="container">
    <div class="row">
        <div class="col-md-10">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <div class="row">
                        <div class="col-md-5">
                            <h4>Item List</h4>
                        </div>
                        <div class="col-md-7" align="right">
                            <a href="~/SmartShop/Post" class="btn btn-primary"><span class="fa fa-pencil-square">&nbsp;</span>Add Post</a>
                            <button id="myModal" class="btn btn-default" onclick="addItemModal()"><span class="fa fa-plus">&nbsp;</span>Add Item</button>
                        </div>
                    </div>

                </div>
                <div class="panel-body">
                    <div id="itemDetailGrid"></div>
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h1>ADS HEADER</h1>
                </div>
                <div class="panel-body">
                    <h4>ADS BODY</h4>
                </div>
            </div>

        </div>
    </div>

</div>
<!-- Edit Item Modal -->
<div class="modal fade" id="itemDetailModal" role="dialog">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Add Item Detail <i class="fa fa-check-square-o"></i></h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="itemname">Photo:</label>
                            <input type="file" name="itemname" value=" " id="itemname" class="form-control" />
                        </div>
                        <div id="divImage">
                            <img id="imageDisplay" src="#" class="img-responsive img-thumbnail" />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="itemname">Item Name:</label>
                            <input type="text" name="itemname" value=" " id="itemName" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label for="itemname">Price:</label>
                            <input type="number" name="itemname" value=" " id="itemPrice" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label>Item Category:</label>
                            <div id="cboItemCategories">

                            </div>
                        </div>
                        <div class="form-group">
                            <label for="itemname">Specification:</label>
                            <textarea rows="20" class="form-control" id="itemSpecification"></textarea>
                        </div>
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button class="btn btn-primary btn-sm" id="" onclick="saveItemOnclick()"><i class="fa fa-check-square-o"></i> Save</button>
                <button class="btn btn-danger btn-sm" id="" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Item Modal-->
<div class="modal fade" id="deleteItemModal" role="dialog">
    <div class="modal-dialog modal-sm">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Delete Item<i class="fa fa-check-square-o"></i></h4>
            </div>
            <div class="modal-body">
                <p>Delete Item?</p>
            </div>
            <div class="modal-footer">
                <button class="btn btn-danger btn-sm" onclick="deleteItem()"><i class="fa fa-check-square-o"></i> Delete</button>
                <button class="btn btn-warning btn-sm" id="" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
            </div>
        </div>
    </div>
</div>

<!-- Add to Post Item Modal-->
<div class="modal fade" id="itemToPostModal" role="dialog">
    <div class="modal-dialog modal-md">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title"><i class="fa fa-check-square-o"></i></h4>
            </div>
            <div class="modal-body">
                <h3>Add item to Post?</h3>
            </div>
            <div class="modal-footer">
                <button class="btn btn-primary btn-sm" onclick="itemToPost()"><i class="fa fa-check-square-o"></i> Add To Post</button>
                <button class="btn btn-delete btn-sm" id="" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var cboItemCategory;
    var itemDetailCollections;
    var currentItem;
    var itemId;
    var postDetail


    function getCategory() {
        var itemCategory = new wijmo.collections.ObservableArray;
        $.ajax({
            type: "GET",
            url: '/api/list/sysitemcategory',
            contentType: "application/json;charset=utf-8",
            success: function (itemCategoryList) {
                for (i = 0; i < itemCategoryList.length; i++) {
                    itemCategory.push({
                        Id: itemCategoryList[i]["Id"],
                        ItemCategory: itemCategoryList[i]["ItemCategory"],
                    });
                }
                cboItemCategory.dispose();
                cboItemCategory = new wijmo.input.ComboBox("#cboItemCategories", {
                    itemsSource: itemCategory,
                    selectedValuePath: "ItemCategory",
                    displayMemberPath: "ItemCategory"
                });
            }
        });
    }


    function addItemModal() {
        $("#itemDetailModal").modal({
            "backDrop": "static",
            "show": true
        });

        getCategory();
        document.getElementById("itemName").value = "";
        document.getElementById("itemPrice").value = "";
        document.getElementById("itemSpecification").value = "";
        document.getElementById("imageDisplay").src = "#";
        itemId = 0;

        document.getElementById("itemname").files = "";
        $("#imageDisplay").hide();
    }

    function editItemModal() {
        $("#itemDetailModal").modal({
            "backDrop": "static",
            "show": true
        });


        itemDetailCollections.editItem(itemDetailCollections.currentItem);
        currentItem = itemDetailCollections.currentEditItem;
        itemId = currentItem.Id;

        console.log(currentItem.ItemCategory);

        cboItemCategory.selectedValue = currentItem.ItemCategory;
        document.getElementById("itemName").value = currentItem.ItemName;
        document.getElementById("itemPrice").value = currentItem.Price;
        document.getElementById("itemSpecification").value = currentItem.Specification;
        document.getElementById("imageDisplay").src = currentItem.PhotoValue;
        $("#imageDisplay").show();

        //document.getElementById("itemName").value = currentItem.ItemName;

    }

    function itemToPostModal() {
        $("#itemToPostModal").modal({
            "backDrop": "static",
            "show": true
        });
    }

    function deleteItemModal() {
        $("#deleteItemModal").modal({
            "backDrop": "static",
            "show": true
        });


    }

    function deleteItem() {
        itemDetailCollections.editItem(itemDetailCollections.currentItem);
        var currentItem = itemDetailCollections.currentEditItem;
        $.ajax({
            type: "DELETE",
            url: '/api/delete/stpitem/' + currentItem.Id,
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            statusCode: {
                200: function () {
                    toastr.success("Successfully Deleted");

                    $("#deleteItemModal").modal('hide');
                    itemDetailCollections = new wijmo.collections.CollectionView(getItem());
                    itemDetailGrid.itemsSource = itemDetailCollections;
                    itemDetailGrid.trackChanges = true;
                },
                400: function (message) {
                    toastr.error(message.responseText.replace(/"/g, ""), "Bad Request");
                }
            }
        });

    }



    ////Insert Data in DB
    //function getPostData() {
    //    var postObject = new Object();
    //    postObject.categoryname = document.getElementById("categoryname").value;
    //    postObject.categorydescription = document.getElementById("categorydesc").value;
    //    postObject.title = document.getElementById("title").value;
    //    postObject.details = document.getElementById("details").value;
    //    postObject.contact_person = document.getElementById("contactperson").value;
    //    postObject.contact_number = document.getElementById("contactnumber").value;
    //    postObject.website = document.getElementById("website").value;
    //    postObject.date_created = document.getElementById("date").value;
    //    postObject.is_active = document.getElementById("active").checked;
    //    //postObject.photo = document.getElementById("photo").value;
    //    return JSON.stringify(postObject)
    //}

    //function addPostItem() {
    //    $.ajax({
    //        type: "POST",
    //        url: '/api/add/stpitem',
    //        data: getPostData(),
    //        contentType: "application/json;charset=utf-8",
    //        statusCode: {
    //            200: function () {
    //                toastr.success("Successfully Added");
    //            },
    //            400: function (message) {
    //                toastr.error(message.responseText.replace(/"/g, ""), "Bad Request");
    //            }
    //        }
    //    });
    //}

    function getItem() {
        var itemDetail = new wijmo.collections.ObservableArray;
        $.ajax({
            type: "GET",
            url: '/api/list/stpitem',
            contentType: "application/json;charset=utf-8",
            success: function (itemDetailList) {
                for (i = 0; i < itemDetailList.length; i++) {
                    var imageElement = document.createElement("images");
                    var imageData = new Image();
                    imageData.src = "data:image/jpeg;base64," + itemDetailList[i]["Photo"];
                    imageElement.appendChild(imageData);
                    var photoDivElement = document.createElement("DIV").appendChild(imageElement);
                    var imageSRCData = "data:image/jpeg;base64," + itemDetailList[i]["Photo"];

                    itemDetail.push({
                        btnEdit: "<button class='btn btn-primary btn-block' style='margin-top:50px;' onclick='editItemModal()'><span class='fa fa-edit'>&nbsp;</span>Edit</button>",
                        btnDelete: "<button class='btn btn-danger btn-block' style='margin-top:50px;' onclick='deleteItemModal()'><span class='fa fa-remove'>&nbsp;</span>Delete</button>",
                        Photo: "<img class='img-responsive' style='margin:auto;' src='" + imageSRCData + "' />",
                        PhotoValue: imageSRCData,
                        Id: itemDetailList[i]["Id"],
                        ItemName: itemDetailList[i]["ItemName"],
                        Price: itemDetailList[i]["Price"],
                        ItemCategory: itemDetailList[i]["ItemCategory"],
                        Specification: itemDetailList[i]["Specification"],
                        CreatedDate: itemDetailList[i]["CreatedDate"],
                        UpdatedDate: itemDetailList[i]["UpdatedDate"]
                    });
                }
            }
        });

        return itemDetail;
    }

    function createFlexGrid() {
        itemDetailCollections = new wijmo.collections.CollectionView(getItem());

        //Flex Grid
        itemDetailGrid = new wijmo.grid.FlexGrid("#itemDetailGrid");
        itemDetailGrid.initialize({
            columns: [
                {
                    "header": "Edit",
                    "binding": "btnEdit",
                    "allowSorting": true,
                    "width": 80,
                    "allowResizing": true,
                    "allowSorting": false,
                    "isContentHtml": true
                },
                {
                    "header": "Delete",
                    "binding": "btnDelete",
                    "allowSorting": true,
                    "width": 80,
                    "allowResizing": true,
                    "allowSorting": false,
                    "isContentHtml": true
                },
                {
                    "header": "Photo",
                    "binding": "Photo",
                    "allowSorting": true,
                    "width": 200,
                    "allowResizing": true,
                    "allowSorting": false,
                    "isContentHtml": true
                },
                {
                    "header": "Item Name",
                    "binding": "ItemName",
                    "allowSorting": true,
                    "width": "2*",
                    "allowResizing": true,
                    "allowSorting": false,
                    "isContentHtml": true
                },
                {

                    "header": "Price",
                    "binding": "Price",
                    "allowSorting": true,
                    "width": "2*",
                    "allowResizing": true,
                    "allowSorting": false,
                    "isContentHtml": true
                },
                {

                    "header": "Item Category",
                    "binding": "ItemCategory",
                    "allowSorting": true,
                    "width": "2*",
                    "allowResizing": true,
                    "allowSorting": false,
                    "isContentHtml": true
                },
                {

                    "header": "Specification",
                    "binding": "Specification",
                    "allowSorting": true,
                    "width": "2*",
                    "allowResizing": true,
                    "allowSorting": false,
                    "isContentHtml": true
                },
            ],
            autoGenerateColumns: false,
            itemsSource: itemDetailCollections,
            isReadOnly: true,
            autoSizeMode: wijmo.grid.AutoSizeMode.Both,
            allowDragging: wijmo.grid.AllowDragging.None,
            selectionMode: wijmo.grid.SelectionMode.Row,
            headersVisibility: wijmo.grid.HeadersVisibility.Column
        });
        itemDetailGrid.trackChanges = true;
        itemDetailGrid.rows.defaultSize = 150;
    }

    // Read URL image
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $("#divImage").show();
                $('#imageDisplay').attr('src', e.target.result);
            }
            reader.readAsDataURL(input.files[0]);
        }
    }

    //
    //
    //Add  and Update Function
    //
    //

    function saveItemOnclick() {
        var itemObject = {
            Photo: $('#imageDisplay').attr('src').replace(/^data:image\/(png|jpeg);base64,/, ""),
            ItemName: document.getElementById("itemName").value,
            Price: document.getElementById("itemPrice").value,
            ItemCategoryId: cboItemCategory.selectedItem["Id"],
            Specification: document.getElementById("itemSpecification").value,
        }
            
        itemData = JSON.stringify(itemObject);
        if (itemId == 0) {

            $.ajax({
                type: "POST",
                url: '/api/add/stpitem',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: itemData,
                statusCode: {
                    200: function () {
                        toastr.success("Successfully Added");
                        $("#itemDetailModal").modal('hide');
                        itemDetailCollections = new wijmo.collections.CollectionView(getItem());
                        itemDetailGrid.itemsSource = itemDetailCollections;
                        itemDetailGrid.trackChanges = true;
                    },
                    404: function () {
                        toastr.error("Bad Request");
                    },
                    400: function () {
                        toastr.error("Something Went Wrong");
                    }
                }
            });
        }
        else {

            $.ajax({
                type: "PUT",
                url: '/api/update/stpitem/' + itemId,
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                data: itemData,
                statusCode: {
                    200: function () {
                        toastr.success("Successfully Update");
                        $("#itemDetailModal").modal('hide');

                        itemDetailCollections = new wijmo.collections.CollectionView(getItem());
                        itemDetailGrid.itemsSource = itemDetailCollections;
                        itemDetailGrid.trackChanges = true;
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/"/g, ""), "Bad Request");
                    }
                }
            });

        }



    }

    // onload image
    document.querySelector('#itemname').addEventListener('change', function () {
        var reader = new FileReader();
        reader.onload = function () {
            var binaryString = this.result;
        }
        reader.readAsBinaryString(this.files[0]);
    }, false);

    window.onload = function () {
        $("#itemname").change(function () {
            readURL(this);
            $("#imageDisplay").show();
        });
        createFlexGrid();
        cboItemCategory = new wijmo.input.ComboBox("#cboItemCategories");
        getCategory();
    }
</script>
